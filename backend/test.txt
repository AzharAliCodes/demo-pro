CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    phone_number VARCHAR(20) NOT NULL,
    id_card_url TEXT,
    email VARCHAR(100) UNIQUE NOT NULL,
    profession VARCHAR(20) CHECK (profession IN ('volunteer', 'manager', 'organizer', 'admin')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE tickets (
  id SERIAL PRIMARY KEY,
  name TEXT NOT NULL,
  number VARCHAR(20) NOT NULL,
  ticket_url TEXT,
  cash NUMERIC(10,2) DEFAULT 20.00,
  user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  is_valid BOOLEAN DEFAULT TRUE,
  created_at TIMESTAMP DEFAULT now()
);


CREATE TABLE scans (
  id SERIAL PRIMARY KEY,
  ticket_id INTEGER NOT NULL REFERENCES tickets(id) ON DELETE CASCADE,
  user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  scan_type TEXT NOT NULL CHECK (scan_type IN ('entry', 'exit')), 
  scanned_at TIMESTAMP DEFAULT now()
);



CREATE TABLE stalls (
    id NUMBER GENERATED IDENTITY PRIMARY KEY,
    stall_no VARCHAR2(50) UNIQUE NOT NULL
);

CREATE TABLE workers (
    id NUMBER GENERATED PRIMARY KEY,
    stall_no VARCHAR2(50) NOT NULL,
    worker_name VARCHAR2(100) NOT NULL,
    worker_number VARCHAR2(50) NOT NULL,
    id_card_url CLOB,  
    CONSTRAINT fk_stall FOREIGN KEY (stall_no) REFERENCES stalls(stall_no) ON DELETE CASCADE
);


